class Solution {
    // Function to sort a linked list of 0s, 1s and 2s.
    static Node segregate(Node head) {
        // add your code here
        if(head==null||head.next==null) return head;
        Node zeroD = new Node(-1);
        Node oneD = new Node(-1);
        Node twoD = new Node(-1);
        Node zero = zeroD; Node one = oneD; Node two = twoD;
        
        Node temp = head;
        while(temp!=null){
            if(temp.data==0){
                zero.next = temp;
                zero=zero.next;
            }else if (temp.data==1){
                one.next = temp;
                one=one.next;
            }else{
                two.next = temp;
                two=two.next;
            }
            temp=temp.next;
        }
        zero.next = (oneD.next!=null)?(oneD.next):(twoD.next);
        one.next = twoD.next;
        two.next = null;
        
        head = zeroD.next;
        
        return head;
    }
}
